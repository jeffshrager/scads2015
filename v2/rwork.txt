> # Note that I had to delete the # header from the csv file
> d = read.csv("sumstats/3661623285-FinalPivotforR.csv")
> e<-d[, -which(names(d) %in% c("file","SNS84","BASE.P.R.C"))]
> e
    STRATEGY_HIDDEN_UNITS RESULTS_HIDDEN_UNITS     ADULT
1                       3                   20 0.9546245
2                       3                   20 0.9489662
3                       3                   20 0.9577359
4                       3                   20 0.9580557
...
> install.packages("reshape")
> library(reshape)
Warning message:
package ‘reshape’ was built under R version 3.1.2 
> e.m <- melt(e, id=c(1:2), measure=c(3))
> # See: http://marcoghislanzoni.com/blog/2013/10/11/pivot-tables-in-r-with-melt-and-cast/
> e.m
    STRATEGY_HIDDEN_UNITS RESULTS_HIDDEN_UNITS variable     value
1                       3                   20    ADULT 0.9546245
2                       3                   20    ADULT 0.9489662
3                       3                   20    ADULT 0.9577359
4                       3                   20    ADULT 0.9580557
5                       3                   20    ADULT 0.9583699
...
> e.c1 <- cast(e.m,RESULTS_HIDDEN_UNITS ~ variable,mean)
> e.c1
  RESULTS_HIDDEN_UNITS     ADULT
1                   10 0.7990717
2                   15 0.9198729
3                   20 0.9431781
> se <- function(x) sqrt(var(x)/length(x))
> e.c2 <- cast(e.m,RESULTS_HIDDEN_UNITS ~ variable,se)
> e.c2
  RESULTS_HIDDEN_UNITS       ADULT
1                   10 0.007395473
2                   15 0.002870548
3                   20 0.003647150
> p1 <- barplot(e.c1, byrow=TRUE)
Error in barplot.default(e.c1) : 'height' must be a vector or a matrix
> e.c1
  RESULTS_HIDDEN_UNITS     ADULT
1                   10 0.7990717
2                   15 0.9198729
3                   20 0.9431781

# Following has to be done in the native R platform for grpahics:

plot(e.c1$RESULTS_HIDDEN_UNITS,e.c1$ADULT)
arrows(e.c1$RESULTS_HIDDEN_UNITS, (e.c1$ADULT)-(e.c2$ADULT), e.c1$RESULTS_HIDDEN_UNITS, (e.c1$ADULT)+(e.c2$ADULT), length=0.05, angle=90, code=3)

# Amazingly, the above actually works!!